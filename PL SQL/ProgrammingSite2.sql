create or replace
PACKAGE PKG_BOOKSTORE AS
  TYPE CURSOR_ALL IS REF CURSOR;
  PROCEDURE P_SELECT_DENOM_GENEROS;
  PROCEDURE ALTA_CLIENTE;
  PROCEDURE BAJA_CLIENTE;
  PROCEDURE COMPROBAR_LOGIN;
  FUNCTION CHECK_AVAIL_NICK RETURN INTEGER;
  FUNCTION CHECK_AVAIL_EMAIL RETURN INTEGER;
END;

create or replace
PROCEDURE P_SELECT_DENOM_GENEROS
  (RES OUT PKG_BOOKSTORE.CURSOR_ALL)
IS
BEGIN

  OPEN RES FOR SELECT DENOM FROM L_GENEROS;
  
  RETURN;

END P_SELECT_DENOM_GENEROS;


create or replace
PROCEDURE P_SELECT_DISPLAY_LIBROS
  (RES OUT PKG_BOOKSTORE.CURSOR_ALL)
IS
BEGIN

  OPEN RES FOR SELECT * FROM LV_DISPLAY_LIBROS;
  
  RETURN;

END P_SELECT_DISPLAY_LIBROS;


create or replace
FUNCTION CHECK_AVAIL_NICK
  (v_Nick IN VARCHAR2)
RETURN integer 
IS
  ok INTEGER;
BEGIN

  SELECT COUNT(*) INTO OK from l_clientes
  WHERE UPPER(Nick) = UPPER(V_NICK);
  
  RETURN OK;
  
END CHECK_AVAIL_NICK;

create or replace
FUNCTION CHECK_AVAIL_EMAIL
  (v_Email IN VARCHAR2)
RETURN integer 
IS
  ok INTEGER;
BEGIN

  SELECT COUNT(*) INTO OK from l_clientes
  WHERE UPPER(Email) = UPPER(V_EMAIL);
  
  RETURN OK;
  
END CHECK_AVAIL_EMAIL;

create or replace 
FUNCTION TOTAL_LIBROS
RETURN INTEGER
IS
  total INTEGER;
BEGIN

  SELECT COUNT(*) INTO TOTAL FROM L_LIBROS;
  
  RETURN TOTAL;
  
END TOTAL_LIBROS;

create or replace
FUNCTION NUEVOS_LIBROS
  (v_fechaDesde TIMESTAMP)
RETURN INTEGER
IS
  nuevos INTEGER;
BEGIN

  SELECT COUNT(*) INTO NUEVOS FROM L_LIBROS
   WHERE fhinsercion > V_FECHADESDE;
  
  RETURN nuevos;

END NUEVOS_LIBROS;









